#Install Redis Master
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: redis
    redis-sentinel: "true"
    role: master
  name: redis-master
spec:
  containers:
    - name: master
      image: kubernetes/redis:v1
      env:
        - name: MASTER
          value: "true"
      ports:
        - containerPort: 6379
      resources:
        limits:
          cpu: "0.1"
      volumeMounts:
        - mountPath: /redis-master-data
          name: data
    - name: sentinel
      image: kubernetes/redis:v1
      env:
        - name: SENTINEL
          value: "true"
      ports:
        - containerPort: 26379
  volumes:
    - name: data
      emptyDir: {}
---

#Install Redis Senitel Service

apiVersion: v1
kind: Service
metadata:
  labels:
    name: sentinel
    role: service
  name: redis-sentinel
spec:
  ports:
    - port: 26379
      targetPort: 26379
  selector:
    redis-sentinel: "true"
---

#Install Redis Replication Controller

apiVersion: v1
kind: ReplicationController
metadata:
  name: redis
spec:
  replicas: 3
  selector:
    name: redis
  template:
    metadata:
      labels:
        name: redis
    spec:
      containers:
      - name: redis
        image: kubernetes/redis:v1
        ports:
        - containerPort: 6379
        resources:
          limits:
            cpu: "0.1"
        volumeMounts:
        - mountPath: /redis-master-data
          name: data
      volumes:
        - name: data
          emptyDir: {}
---

#Redis Sentinel Controller

apiVersion: v1
kind: ReplicationController
metadata:
  name: redis-sentinel
spec:
  replicas: 3
  selector:
    redis-sentinel: "true"
  template:
    metadata:
      labels:
        name: redis-sentinel
        redis-sentinel: "true"
        role: sentinel
    spec:
      containers:
      - name: sentinel
        image: kubernetes/redis:v1
        env:
          - name: SENTINEL
            value: "true"
        ports:
          - containerPort: 26379
---

#Install ElasticSearch Service

apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  labels:
    name: elasticsearch
spec:
  type: NodePort
  selector:
    name: elasticsearch
  ports:
  - name: http
    port: 9200
    protocol: TCP
  - name: transport
    port: 9300
    protocol: TCP
  externalIPs: [52.53.218.69]
---

#Install ElasticSearch Replication Controller 

apiVersion: v1
kind: ReplicationController
metadata:
  name: elasticsearch
  labels:
    name: elasticsearch
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: elasticsearch
    spec:
      containers:
      - name: elasticsearch
        image: elasticsearch:1.5
        env:
        - name: "CLUSTER_NAME"
          value: "cloudboost"
        - name: "DISCOVERY_SERVICE"
          value: "elasticsearch"
        ports:
        - containerPort: 9200
          name: http
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - mountPath: /data
          name: elasticsearch-storage
      volumes:
      - name: elasticsearch-storage
        source:
          emptyDir: {}
---

#Install MongoDB

apiVersion: v1
kind: Service
metadata:
  labels:
    name: mongo
  name: mongo
spec:
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    name: mongo
---

#Install MongoDB Replication Controller

apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: mongo
  name: mongo
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: mongo
    spec:
      containers:
      - image: mongo:3.2
        name: mongo
        ports:
        - name: mongo
          containerPort: 27017
          hostPort: 27017
        command:
            - mongod
            - "--replSet"
            - cloudboost
            - "--smallfiles"
            - "--noprealloc"
        volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
      volumes:
        - name: mongo-persistent-storage
          source:
          emptyDir: {}
---

#Install CloudBoost Engine

apiVersion: v1
kind: Service
metadata:
  labels:
    name: cloudboost-engine
  name: cloudboost-engine
spec:
  ports:
  - port: 4730
    targetPort: 4730
  selector:
    name: cloudboost-engine
---

#Install CloudBoost Engine Replication Controller

apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: cloudboost-engine
  name: cloudboost-engine
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: cloudboost-engine
    spec:
      containers:
      - image: cloudboost/cloudboost
        name: cloudboost-engine
        ports:
        - name: cloudboost
          containerPort: 4730
          hostPort: 4730
---

#Install CloudBoost User Service

apiVersion: v1
kind: Service
metadata:
  labels:
    name: cloudboost-user-service
  name: cloudboost-user-service
spec:
  ports:
  - port: 3000
    targetPort: 3000
  selector:
    name: cloudboost-user-service
---

#Install CloudBoost User Service Replication Controller

apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: cloudboost-user-service
  name: cloudboost-user-service
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: cloudboost-user-service
    spec:
      containers:
      - image: registry.cloudboost.io/cloudboost-service
        name: cloudboost-user-service
        ports:
        - name: cloudboost
          containerPort: 3000
          hostPort: 3000
---

#Install CloudBoost Dashboard

apiVersion: v1
kind: Service
metadata:
  labels:
    name: cloudboost-dashboard
  name: cloudboost-dashboard
spec:
  ports:
  - port: 80
    targetPort: 1440
  selector:
    name: cloudboost-dashboard
---

#Install CloudBoost Dashboard Replication Controller

apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: cloudboost-dashboard
  name: cloudboost-dashboard
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: cloudboost-dashboard
    spec:
      containers:
      - image: registry.cloudboost.io/cloudboost-dashboard
        name: cloudboost-dashboard
        ports:
        - name: cloudboost
          containerPort: 1440
          hostPort: 1440
---
